name: Test and Lint

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  advent-of-code:
    name: Advent of Code
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "Advent of Code"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Build
        run: cargo build --all-features
      - name: Test
        run: cargo test --all-features
      - name: Docs
        run: cargo doc --all-features
      - name: Clippy
        run: cargo clippy --all-features -- -D warnings
      - name: Rustfmt
        run: cargo fmt --all --check

  c-primer-plus:
    name: C Primer Plus
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "C Primer Plus (3rd edition)"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ninja
        run: |
          case ${{ matrix.os }} in 
              ubuntu-latest)
              sudo apt-get install -y ninja-build
              ;;
              macos-latest)
              brew install ninja
              ;;
              windows-latest)
              choco install ninja
              ;;
          esac

      - name: Compile
        run: |
          cmake \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS='-Wall -Wextra -Werror -Wno-unused-result' \
            -DCMAKE_CXX_FLAGS='-Wall -Wextra -Werror -Wno-unused-result' \
            -G Ninja \
            -S . -B build
          cmake --build build

  honi:
    name: Hrvatsko otvoreno natjecanje u informatici
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "Hrvatsko otvoreno natjecanje u informatici"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Test
        run: python test.py
      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1

  leetcode:
    name: LeetCode
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "LeetCode"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          case ${{ matrix.os }} in 
              ubuntu-24.04)
              sudo apt update
              sudo apt install -y ninja-build
              ;;
              macos-latest)
              brew install ninja
              brew install llvm
              ln -s "$(brew --prefix llvm)/bin/clang-format" "/usr/local/bin/clang-format"
              ln -s "$(brew --prefix llvm)/bin/clang-tidy" "/usr/local/bin/clang-tidy"
              ;;
              windows-latest)
              choco install ninja
              ;;
          esac

      - name: Compile and test
        run: |
          cmake \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS='-Wall -Wextra -Wpedantic -Werror' \
            -DCMAKE_CXX_FLAGS='-Wall -Wextra -Wpedantic -Werror' \
            -G Ninja \
            -S . -B build
          cmake --build build
          cd ./build
          ctest

  natjecanje-iz-informatike:
    name: Natjecanje iz informatike
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "Natjecanje iz informatike"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Test
        run: python test.py
      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1

  project-euler:
    name: Project Euler
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: "Project Euler"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Build
        run: cargo build --all-features
      - name: Test
        run: cargo test --all-features
      - name: Docs
        run: cargo doc --all-features
      - name: Clippy
        run: cargo clippy --all-features -- -D warnings
      - name: Rustfmt
        run: cargo fmt --all --check
